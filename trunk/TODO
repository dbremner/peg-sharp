http://pdos.csail.mit.edu/~baford/packrat/http://www.codeproject.com/KB/recipes/grammar_support_1.aspxhttp://www.replicator.org/node/67http://www.codeplex.com/ironyinternal abstract class Node{	// The text matched by this node.	public string Text {get;}		// Returns true if the node was derived from a non-terminal.	public bool NonTerminal {get;}		// The name of the non-terminal this node was derived from.	// Valid only if NonTerminal is true.	public string Name {get; private set;}		// Terminals and non-terminals matched by the non-terminal.	// Valid only if NonTerminal is true.	public Node[] Children {get; private set;}		// 1-based line number associated with the node.	public int Line {get; private set;}		// 1-based column number associated with the node.	public int Col {get; private set;}}* Add a Parse overload that takes a file:	"some error at line 10 col 1 in /your/file/here"* Add support for generic nodes:	- require either a value or a node setting	- should be a way to suppress generation of the node class* Try it in Continuum.* Rename ParserAddons ParserActions.* Might want a setting or something to allow Parse to return a different type than the actions.* Add a readme.* Do a release.* Email the http://pdos.csail.mit.edu/~baford/packrat/ guy. Also wiki.* Might want optional support for generating (and rewriting?) nodes. ANTLR has some   support for this.* Should there be an explicit way to match eot?* Work on optimization:	- could inline simple rules (eg Space) before they are written	- could get rid of helpers like DoSequence	- look into using pointers to avoid string [] range checks	- [...] / [...]* Might be nice to add some support for error recovery so multiple parse errors can be   reported. See Bison's simple error recovery.* Would be nice to support #if stuff.* Might want a --setting switch. Should override earlier switches and peg file settings.* Allow arbitrary sequences (instead of just strings) to be parsed?	 /Users/jessejones/Documents/Developer/UnixNotes.sh /Users/jessejones/Documents/Developer/c#.cs  partial private void onNameChanged();