http://pdos.csail.mit.edu/~baford/packrat/http://www.codeproject.com/KB/recipes/grammar_support_1.aspxhttp://www.replicator.org/node/67* Use peg-sharp to build its parser.* Might want a --setting switch. Should override earlier switches and peg file settings.* Make sure stuff like '\t ' parses correctly (hand written parser treats the tab and space as   white space).* Might want entry-hooks and exit-hooks settings.* Can we add support for global state somehow?* Add a readme.* Do a release.* Email the http://pdos.csail.mit.edu/~baford/packrat/ guy. Also wiki.* Work on optimization:	- could inline simple rules (eg Space) before they are written	- could get rid of helpers like DoSequence	- look into using pointers to avoid string [] range checks	- [...] / [...]* Might be nice to add some support for error recovery so multiple parse errors can be   reported.* Would be nice to support #if stuff.* Packrat stuff:* Allow arbitrary sequences (instead of just strings) to be parsed?	 /Users/jessejones/Documents/Developer/UnixNotes.sh /Users/jessejones/Documents/Developer/c#.csmono --debug bin/gendarme.exe --config rules/rules.xml --severity all --confidence all --quiet --ignore ../../peg-sharp/gendarme.ignore ../../peg-sharp/bin/example.exe ../../peg-sharp/bin/peg-sharp.exe > tmp.txt