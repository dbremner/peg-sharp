# Grammar for predicate expressions used within template files.exclude-exception = truestart = Predicatevalue = Predicateusing = System.Linqdebug = nonePredicate := OrExpression;OrExpression := AndExpression ('or' SS AndExpression)+		`value = new OrPredicate(from e in results where e.Value != null select e.Value)` `expected = "or expression"`OrExpression := AndExpression;AndExpression := EqualityExpression ('and' SS EqualityExpression)+	`value = new AndPredicate(from e in results where e.Value != null select e.Value)` `expected = "and expression"`AndExpression := EqualityExpression;EqualityExpression := NotExpression '==' S NotExpression	`value = new EqualsPredicate(results[0].Value, results[2].Value)` `expected = "equality expression"`EqualityExpression := NotExpression '!=' S NotExpression		`value = new NotEqualsPredicate(results[0].Value, results[2].Value)` `expected = "equality expression"`EqualityExpression := NotExpression;NotExpression := 'not' SS PrimaryExpression					`value = new NotPredicate(results[1].Value)` `expected = "not expression"`NotExpression := PrimaryExpression;PrimaryExpression := '(' S Predicate ')' S						`value = results[1].Value`PrimaryExpression := Literal;PrimaryExpression := 'excluded' SS '(' S Literal ')' S			`value = new ExcludedPredicate(results[2].Value)` `expected = "excluded function"`PrimaryExpression := Variable;Literal := "'" [^'\n\r]* "'" S											`value = new StringPredicate(text.Trim())` `expected = "string literal"`Literal := 'true' SS													`value = new BoolPredicate(true)` `expected = "boolean literal"`Literal := 'false' SS													`value = new BoolPredicate(false)` `expected = "boolean literal"`Variable := VariablePrefix VariableSuffix* S						`value = new VariablePredicate(text.Trim())` `expected = "variable"`VariablePrefix := [a-zA-Z_];VariableSuffix := [a-zA-Z0-9_-];S := Space* 															`text = null`SS := !VariableSuffix Space* 										`text = null`Space := [ \t\r\n] 													`;` `expected = "whitespace"`