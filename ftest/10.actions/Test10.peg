start = Exprvalue = doubledebug = Expr := S Sum;Sum := Product (('+' / '-') S Product)*  `if (results.Count > 0) value = EvaluateBinary(results)`Product := Value (('*' / '/') S Value)*  `if (results.Count > 0) value = EvaluateBinary(results)`Value := [0-9]+ S `value = Double.Parse(text.Trim())` `expected = "number"`Value := '(' Expr ')' S `value = results[1].Value` `expected = "parenthesized expression"`S := Space* `text = null`  # We use a separate space rule because x* always succeeds.Space := [ \t\r\n] `;` `expected = "whitespace"`