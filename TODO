http://pdos.csail.mit.edu/~baford/packrat/http://www.codeproject.com/KB/recipes/grammar_support_1.aspxhttp://www.replicator.org/node/67* Update the description.* Make sure the license file is present.* Add an example:	- calculator	- double and long types	- variables	- $bases variable, defaults to 10 16* Run gendarme on the example.* Build a new parser for the multimethod example.* Do a multimethod release.* Add custom-methods setting. Space separated list of method names to omit.* Add tab-indent and space-indent settings	- should allow negative values, eg tabs=-1000, space=1* Might want a --setting switch. Should override earlier switches and peg file settings.* Use peg-sharp to build its parser.* Make sure stuff like '\t ' parses correctly (hand written parser treats the tab and space as   white space).* Might want entry-hooks and exit-hooks settings.* Can we add support for global state somehow?* Write a readme. Talk about the advantages and disadvantages. Provide some examples.* Publish.* Email the http://pdos.csail.mit.edu/~baford/packrat/ guy. Also wiki.* Work on optimization:	- could inline simple rules (eg Space) before they are written	- could get rid of helpers like DoSequence	- look into using pointers to avoid string [] range checks	- [...] / [...]* Might be nice to add some support for error recovery so multiple parse errors can be   reported.* Would be nice to support #if stuff.* Packrat stuff:* Allow arbitrary sequences (instead of just strings) to be parsed?	 /Users/jessejones/Documents/Developer/UnixNotes.sh /Users/jessejones/Documents/Developer/c#.cs